
if [ -f ~/dotfiles/bash_aliases ]; then
    . ~/dotfiles/bash_aliases
fi

export SCRATCH_TMP=/scratch/miket/my520/tmp

# Shortcut for ls
# alias ls='ls -F'
alias ls='ls --color=auto -F'
alias l='ls -lh --group-directories-first'

# Never wrap lines in less
export LESS='-S'

# Syntax highlighting for less (deprecated)
# alias vless='vim -u /usr/share/vim/vim72/macros/less.vim'

# alias ipy='ipython'

function n3() {
  host=$(hostname | cut -d"." -f1)
  if [[ $host != "eris1n3" ]]; then
    ssh eris1n3
  fi
}
function n2() {
  host=$(hostname | cut -d"." -f1)
  if [[ $host != "eris1n2" ]]; then
    ssh eris1n2
  fi
}
# alias n3='ssh eris1n3'
# alias n2='ssh eris1n2'

alias blog='less ~/jobs.log'

alias prebwa='bsub -J pyPreBWA -o pyPreBWA.out -e pyPreBWA.err -q normal preBWA.py'
alias pipeline='bsub -J pipeline -o pipeline.out -e pipeline.err -q normal pipeline.py'
alias gatkpp='bsub -J preprocess_gatk -q normal -o gatk_preprocessing.out -e gatk_preprocessing.err gatk_preprocessing.py'

# alias interact='bsub -Is -q interact /bin/bash'
# alias interact='bsub -Is -q interact -sla miket_sc /bin/bash'

alias py3='source activate py35'

alias noheader="sed '/^#/d'"

# Specify lsf parameters when invoking an interactive job
function interact() {
    bsub -Is -q interact -sla miket_sc $@ /bin/bash
}

# Access lshosts and bhosts by hostname
function lshost() {
    cat <(lshosts | head -n1) <(lshosts | grep -P -e "$1")
}

function bhost() {
    cat <(bhosts | head -n1) <(bhosts | grep -P -e "$1")
}

function ourhosts() {
   bhost "(cn02[1-4]|cmu16[1-5]|cn05[5-9]|cn06[0-4])"
}

function ourhostusers(){
  bjobs -u all \
    | awk -v OFS="\t" '{print $2, $4, $6}' \
    | egrep "(cn02[1-4]|cmu16[1-5]|cn05[5-9]|cn06[0-4])" \
    | awk -v OFS="\t" '{print $1, $2}' \
    | sort \
    | uniq -c
}

function ourhostload() {
  host_count=$(ourhosts | sed '1d' | wc -l)
  
  capacity=$(ourhosts | awk '{cores+=$4} END {print cores}')
  load=$(ourhosts | awk '{cores+=$5} END {print cores}')
  avail=$((capacity - load))
  
  echo "${avail}/${capacity} cores available on $host_count hosts"
}

function bak() {
    f=$1
    cp $f ${f}.bak
}

# UCSC Blat parameters
function blat_ucsc () {
  db=/data/talkowski/tools/ref/human_g1k_v37/human_g1k_v37.2bit
  query=$1
  output=$2

  blat -stepSize=5 -repMatch=2253 -minScore=0 -minIdentity=0 $db $query $output
}

# Open matlab shell on remote host
alias matshell='matlab -nojvm -nodisplay -nosplash'

# Virtual environment var
# export WORKON_HOME=$HOME/.virtualenvs

export MACHTYPE=x86_64

# Deprecated, modules for respective programs set these variables
# PICARD_DIR=/data/talkowski/tools/bin/picard-current/picard-tools-1.74
# export PICARD_DIR=/apps/source/picard-tools-1.75/picard-tools-1.75
# export PICARD_DIR=/data/talkowski/tools/bin/picard
# export GATK_DIR=/apps/source/gatk-2.2-4/GenomeAnalysisTK-2.2-4-g4a174fb
# export GATK_DIR=/data/talkowski/tools/bin/gatk
# export GATK_BUNDLE=/data/HD/dataset/gatk-bundle-1.5-hg19
# export QUEUE_DIR=/data/talkowski/tools/bin/Queue-2.3-9-ge5ebf34
# export QUEUE_DIR=/data/talkowski/tools/bin/queue

export PPH=/data/talkowski/tools/bin/polyphen-2.2.2
export EVS=/data/talkowski/tools/local/src/evsClient-v.0.0.9

# PATH
#PATH=$PATH:$HOME/code/scripts
# PATH=$HOME/.local/bin:$PATH
#PATH=$HOME/code:$PATH
#PATH=$HOME/code/pybamstat:$PATH
#PATH=$HOME/code/pycluster:$PATH
# PATH=$PATH:/data/talkowski/tools/bin/scala/bin
# PATH=$PATH:/data/talkowski/tools/bin/annovar
# PATH=$PATH:/data/talkowski/tools/bin/vcftools_0.1.10/bin
# PATH=$PATH:$PPH/bin
# PATH=/data/talkowski/tools/bin/jdk1.6.0_21/bin:$PATH
# PATH=/data/talkowski/tools/local/bin:$PATH
# PATH=/data/talkowski/tools/bin:/data/talkowski/tools/code:$PATH
# PATH=$PATH:$HOME/code/dna-scripts
# export PATH

export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/data/talkowski/tools/bin/libgtextutils-0.6/lib/pkgconfig

export MANPATH=$MANPATH:/data/talkowski/tools/bin/scala/man/man1

# MAD path
mad=met37@bricklayer01.partners.org

# DIPR
# dipr=cc472@172.27.111.200

function sscID {
  fgrep -e "${1}" ~/sfari/lists/519families_idmapping | cut -f2
}

function s3bam {
  sample=$1
  quad=$(echo $sample | cut -d"." -f1)
  ssc=$(sscID $sample)

  echo "s3://sscwgs/${quad}/BAM/Sample_${ssc}/analysis/${ssc}.final.bam"
}

# Show talkowski disk usage
function talk_df {
  df -h \
    | fgrep -e "/scratch/miket" -e "/data/talkowski" \
    | fgrep -v -e "panfs://" \
    | awk -v OFS="\t" '{print $5, $1, $2, $3, $4}' \
    | cat <(echo -e "Mount\tSize\tUsed\tAvail\tUse%") - \
    | column -t
}

# Get job status summary
function bstat() {
  bjobs $@ | sed '1d' | awk '{print $3}' | sort | uniq -c
}

# WDL tools
alias cromwell='java -jar $CROMWELL'
alias wdltool='java -jar $WDLTOOL'
